#global;
person;
student->person;
distancevalue;
height->distancevalue;
weight;
bmi;

#static;
meters;
feet;
kilograms;

#assertions;
canhave(person height);
canhave(person weight);

#actions;
name: mentionheightinmeters;
parameters: person;
preconditions: !hasproperty(0 height);
creates: 0/height;
effects: hasproperty(0 height) in(+0 meters) visiblein(+0 meters);

name: mentionheightinfeet;
parameters: person;
preconditions: !hasproperty(0 height);
creates: 0/height;
effects: hasproperty(0 height) in(+0 feet) visiblein(+0 feet);

name: convertfeettometers;
parameters: distancevalue;
preconditions: !visiblein(0 meters) in(0 feet) !in(0 meters);
creates: ;
effects: in(0 meters) !in(0 feet);
~
0
1
o,{0},(number-0.3048),{0},*,1
a,{0},{action_result}
~

name: convertmeterstofeet;
parameters: distancevalue;
preconditions: !visiblein(0 feet) in(0 meters) !in(0 feet);
creates: ;
effects: in(0 feet) !in(0 meters);
~
0
1
o,{0},(number-0.3281),{0},*,1
a,{0},{action_result}	
~

name: mentionweightinkilograms;
parameters: person;
preconditions: !hasproperty(0 weight);
creates: 0/weight;
effects: hasproperty(0 weight) in(+0 kilograms);

name: computebmi;
parameters: person weight height;
preconditions: !hasproperty(0 bmi) hasproperty(0 1) hasproperty(0 2) in(1 kilograms) in(2 meters);
creates: 0/bmi;
effects: hasproperty(0 bmi);
~
1
squared-number
2
o,{2},{2},[squared],*,1
o,{1},[squared],{+0},/,2
a,{+0},{action_result}
~