#global;
person;
student->person;
distancevalue;
height->distancevalue;
weight;

#static;
meters;
feet;
kilograms;

#assertions;
canhave(person height);
canhave(person weight);

#actions;
name: mentionheightinmeters;
parameters: person;
preconditions: !hasproperty(0 height);
creates: 0/height;
effects: hasproperty(0 height) in(+0 meters);

name: mentionheightinfeet;
parameters: person;
preconditions: !hasproperty(0 height);
creates: 0/height;
effects: hasproperty(0 height) in(+0 feet);

name: convertfeettometers;
parameters: distancevalue;
preconditions: in(0 feet) !in(0 meters);
creates: ;
effects: in(0 meters) !in(0 feet);

name: mentionweightinkilograms;
parameters: person;
preconditions: !hasproperty(0 weight);
creates: 0/weight;
effects: hasproperty(0 weight) in(+0 kilograms)

